{"version":3,"file":"3.chunk.js","sources":["webpack:///./src/app/core/forms/index.ts?238c","webpack:///./src/app/core/forms/validators.ts?0eda","webpack:///./src/app/pages/+signup/signup.component.ts","webpack:///./src/app/pages/+signup/signup.component.css","webpack:///./src/app/pages/+signup/signup.component.html","webpack:///./src/app/pages/+signup/signup.module.ts"],"sourcesContent":["export * from './validators';\n\nexport const EMAIL_PATTERN = \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$\";\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src?loader=system!./src/app/core/forms/index.ts","import {FormControl, ValidatorFn} from \"@angular/forms\";\n\nexport class Validators {\n\n  static match(c1:FormControl):ValidatorFn {\n    return (c2) => {\n      if (c1.value !== c2.value) return {matched: false};\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src?loader=system!./src/app/core/forms/validators.ts","import {Component, OnInit} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {FormGroup, FormControl, Validators} from \"@angular/forms\";\nimport * as toastr from \"toastr\";\nimport {\n  EMAIL_PATTERN,\n  Validators as AppValidators\n} from \"../../core/forms\";\nimport {UserService} from \"../../core/services/user.service\";\nimport {LoginService} from \"../../core/services/login.service\";\n\n@Component({\n  selector: 'mpt-signup',\n  styles: [require('./signup.component.css')],\n  template: require('./signup.component.html'),\n})\nexport class SignupComponent implements OnInit {\n\n  myForm: FormGroup;\n  name: FormControl;\n  fname: FormControl;\n  email: FormControl;\n  password: FormControl;\n  passwordConfirmation: FormControl;\n\n  constructor(private router: Router,\n              private userService: UserService,\n              private loginService: LoginService) {\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  onSubmit(params) {\n    this.userService.create(params)\n      .mergeMap(() => {\n        return this.loginService.login(params.email, params.password);\n      })\n      .subscribe(() => {\n        toastr.success('Registered Successfully');    \n        this.router.navigate(['/home']);\n        \n      }, this.handleError)\n    ;\n  }\n  \n  cancel() \n  {\n      this.router.navigate(['/login']);\n  }\n\n  private initForm() {\n    this.name = new FormControl('', Validators.compose([\n      Validators.required,\n      Validators.minLength(4),\n    ]));\n    this.fname = new FormControl('', Validators.compose([\n                                                        Validators.required,\n                                                        Validators.minLength(10),\n                                                      ]));\n    this.email = new FormControl('', Validators.compose([\n      Validators.required,\n      Validators.pattern(EMAIL_PATTERN),\n    ]));\n    this.password = new FormControl('', Validators.compose([\n      Validators.required,\n      Validators.minLength(6),\n    ]));\n    this.passwordConfirmation = new FormControl('', Validators.compose([\n      Validators.required,\n      AppValidators.match(this.password),\n    ]));\n    this.myForm = new FormGroup({\n      name: this.name,\n      fname: this.fname,\n      email: this.email,\n      password: this.password,\n      passwordConfirmation: this.passwordConfirmation,\n    });\n  }\n\n  private handleError(error) {\n    switch (error.status) {\n      case 400:\n        if (error.json()['code'] === 'email_already_taken') {\n          toastr.error('Sign Up', 'This email is already taken.');\n        }\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src?loader=system!./src/app/pages/+signup/signup.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/+signup/signup.component.css\n// module id = 1521\n// module chunks = 3","module.exports = \"<h1 class=\\\"panel-heading\\\">Sign Up</h1>\\n\\n<form [formGroup]=\\\"myForm\\\" (submit)=\\\"onSubmit(myForm.value)\\\" novalidate>\\n\\n  <div class=\\\"form-group\\\"\\n       [class.has-danger]=\\\"!name.valid && name.touched\\\">\\n    <label class=\\\"col-form-label\\\" for=\\\"nameInput\\\">Name</label>\\n    <input\\n      type=\\\"text\\\"\\n      class=\\\"form-control form-control-danger\\\"\\n      id=\\\"nameInput\\\"\\n      placeholder=\\\"Name\\\"\\n      maxlength=\\\"30\\\"\\n      formControlName=\\\"name\\\"/>\\n    <div *ngIf=\\\"name.hasError('required') && name.touched\\\"\\n         class=\\\"form-control-feedback\\\">Name is required\\n    </div>\\n    <div *ngIf=\\\"name.hasError('minlength') && name.touched\\\"\\n         class=\\\"form-control-feedback\\\">Name must be at least 4 chars.\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\"\\n       [class.has-danger]=\\\"!name.valid && name.touched\\\">\\n    <label class=\\\"col-form-label\\\" for=\\\"fullInput\\\">Full Name</label>\\n    <input\\n      type=\\\"text\\\"\\n      class=\\\"form-control form-control-danger\\\"\\n      id=\\\"fullInput\\\"\\n      placeholder=\\\"Full Name\\\"\\n      maxlength=\\\"30\\\"\\n      formControlName=\\\"fname\\\"/>\\n    <div *ngIf=\\\"fname.hasError('required') && fname.touched\\\"\\n         class=\\\"form-control-feedback\\\">Full Name is required\\n    </div>\\n    <div *ngIf=\\\"fname.hasError('minlength') && fname.touched\\\"\\n         class=\\\"form-control-feedback\\\">Full Name must be at least 10 chars.\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\"\\n       [class.has-danger]=\\\"!email.valid && email.touched\\\">\\n    <label class=\\\"col-form-label\\\" for=\\\"emailInput\\\">Email</label>\\n    <input\\n      type=\\\"email\\\"\\n      class=\\\"form-control form-control-danger\\\"\\n      id=\\\"emailInput\\\"\\n      placeholder=\\\"Email\\\"\\n      maxlength=\\\"30\\\"\\n      formControlName=\\\"email\\\"/>\\n    <div *ngIf=\\\"email.hasError('required') && email.touched\\\"\\n         class=\\\"form-control-feedback\\\">Email is required\\n    </div>\\n    <div *ngIf=\\\"email.hasError('pattern') && email.touched\\\"\\n         class=\\\"form-control-feedback\\\">Invalid format\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\"\\n       [class.has-danger]=\\\"!password.valid && password.touched\\\">\\n    <label class=\\\"col-form-label\\\" for=\\\"passwordInput\\\">Password</label>\\n    <input\\n      type=\\\"password\\\"\\n      class=\\\"form-control form-control-danger\\\"\\n      id=\\\"passwordInput\\\"\\n      placeholder=\\\"Password\\\"\\n      maxlength=\\\"100\\\"\\n      formControlName=\\\"password\\\"/>\\n    <div *ngIf=\\\"password.hasError('required') && password.touched\\\"\\n         class=\\\"form-control-feedback\\\">Password is required\\n    </div>\\n    <div *ngIf=\\\"password.hasError('minlength') && password.touched\\\"\\n         class=\\\"form-control-feedback\\\">Password must be longer than 6 chars.\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\"\\n       [class.has-danger]=\\\"!passwordConfirmation.valid && passwordConfirmation.touched\\\">\\n    <label class=\\\"col-form-label\\\" for=\\\"passwordConfirmationInput\\\">Confirm\\n      Password</label>\\n    <input\\n      type=\\\"password\\\"\\n      class=\\\"form-control form-control-danger\\\"\\n      id=\\\"passwordConfirmationInput\\\"\\n      placeholder=\\\"Confirm Password\\\"\\n      formControlName=\\\"passwordConfirmation\\\"/>\\n    <div\\n      *ngIf=\\\"passwordConfirmation.hasError('required') && passwordConfirmation.touched\\\"\\n      class=\\\"form-control-feedback\\\">Password confirmation is required\\n    </div>\\n    <div\\n      *ngIf=\\\"passwordConfirmation.hasError('matched') && passwordConfirmation.touched\\\"\\n      class=\\\"form-control-feedback\\\">Doesn't match\\n    </div>\\n  </div>\\n\\n  <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary\\\">Submit</button>\\n  <button type=\\\"cancel\\\" class=\\\"btn btn-lg btn-danger\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n\\n</form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/+signup/signup.component.html\n// module id = 1522\n// module chunks = 3","import {CommonModule} from \"@angular/common\";\nimport {ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport {SignupComponent} from \"./signup.component\";\nimport {NgModule} from \"@angular/core/src/metadata/ng_module\";\nimport {Routes, RouterModule} from \"@angular/router\";\n\nconst routes: Routes = [\n  {path: '', component: SignupComponent},\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    SignupComponent,\n  ],\n  exports: [\n    SignupComponent,\n  ]\n})\nexport class SignupModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-router-loader/src?loader=system!./src/app/pages/+signup/signup.module.ts"],"mappings":";;;;;;;;;;AAAA;AAEA;;;;;;;;;;ACAA;AAAA;AAQA;AANA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AARA;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AAIA;AACA;AAOA;AASA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9EA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AA4EA;;AAAA;AA3EA;;;;;;;;AChBA;;;;;;;ACAA;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAgBA;AAAA;AACA;AAfA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AAAA;AADA;;;;;","sourceRoot":""}